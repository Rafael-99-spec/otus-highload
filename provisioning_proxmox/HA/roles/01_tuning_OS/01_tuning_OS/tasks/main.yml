---
- name: install epel
  yum:
    name:
      - epel-release

- name: install packages
  yum:
    name:
      - chrony
      - qemu-guest-agent
      - libselinux-python
      - vim
      - vim-enhanced
      - mc
      - screen
      - ccze
#      - lnav
      - redhat-lsb-core
      - wget
      - yum-utils
      - htop
      - sudo
      - iftop
      - net-tools
      - elinks
      - lynx
      - bind-utils
      - deltarpm
      - lsof
      - tree
      - traceroute
      - tcpdump
      - nmap
      - unzip
#      - iperf3
      - lbzip2
      - fuse-sshfs
      - bash-completion
    state: latest
  notify:
    - chronyd start and enable
    - qemu-guest-agent restart

- name: copy .screenrc to root user
  copy:
    src: screenrc
    dest: /root/.screenrc
    owner: root
    group: root
    mode: '0600'

- name: copy .screenrc to otus user
  copy:
    src: screenrc
    dest: /home/otus/.screenrc
    owner: otus
    group: otus
    mode: '0600'

- name: edit bashrc, vimrc
  shell:
    echo "alias vi='vim'" >> /root/.bashrc && echo "alias vi='vim'" >> /home/otus/.bashrc && echo "colorscheme desert" >> /etc/vimrc

- name: set timezone
  timezone:
    name: "{{ TIMEZONE_OS }}"

- name: put SELinux in permissive mode
  selinux:
    policy: targeted
    state: permissive

#- name: host name setting
#  hostname:
#    name: "{{ ansible_hostname }}"

- name: copy hosts.redhat.tmpl
  copy:
    src: hosts.redhat.tmpl
    dest: "{{ HOSTS_FILE }}"
    owner: root
    group: root
    mode: '0644'
  tags:
    - update_hosts
    - change_name_HOST_NAME_PG_CON_POOL_VIP

- name: add mappings to /etc/hosts
  blockinfile:
    path: "{{ HOSTS_FILE }}"
    block: |
      {{ item.ip }} {{ item.name }}.{{ FAKE_DOMAIN }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  with_items:
    - { name: "{{ HOST_NAME_BALANCER_VIP }}", ip: "{{ HOST_IP_BALANCER_VIP }} "}
    - { name: "{{ HOST_NAME_BALANCER_01 }}", ip: "{{ HOST_IP_BALANCER_01 }} "}
    - { name: "{{ HOST_NAME_BALANCER_02 }}", ip: "{{ HOST_IP_BALANCER_02 }} "}
    #- { name: "{{ HOST_NAME_PG_HAPROXY }}", ip: "{{ HOST_IP_PG_HAPROXY }}" }
    - { name: "{{ HOST_NAME_PG_CON_POOL_VIP }}", ip: "{{ HOST_IP_PG_CON_POOL_VIP }}" }
    - { name: "{{ HOST_NAME_PG_CON_POOL_01 }}", ip: "{{ HOST_IP_PG_CON_POOL_01 }}" }
    - { name: "{{ HOST_NAME_PG_CON_POOL_02 }}", ip: "{{ HOST_IP_PG_CON_POOL_02 }}" }
    - { name: "{{ HOST_NAME_DCS_01 }}", ip: "{{ HOST_IP_DCS_01 }}" }
    - { name: "{{ HOST_NAME_DCS_02 }}", ip: "{{ HOST_IP_DCS_02 }}" }
    - { name: "{{ HOST_NAME_DCS_03 }}", ip: "{{ HOST_IP_DCS_03 }}" }
    - { name: "{{ HOST_NAME_PG01 }}", ip: "{{ HOST_IP_PG01 }}" }
    - { name: "{{ HOST_NAME_PG02 }}", ip: "{{ HOST_IP_PG02 }}" }
    - { name: "{{ HOST_NAME_PG03 }}", ip: "{{ HOST_IP_PG03 }}" }
    - { name: "{{ HOST_NAME_PG_VIP }}", ip: "{{ HOST_IP_PG_VIP }}" }
    #- { name: "{{ HOST_NAME_DCS }}", ip: "{{ HOST_IP_DCS }}" }
    - { name: "{{ HOST_NAME_WEB_VIP }}", ip: "{{ HOST_IP_WEB_VIP }}" }
    - { name: "{{ HOST_NAME_WEB01 }}", ip: "{{ HOST_IP_WEB01 }}" }
    - { name: "{{ HOST_NAME_WEB02 }}", ip: "{{ HOST_IP_WEB02 }}" }
    - { name: "{{ HOST_NAME_HL_CLIENT }}", ip: "{{ HOST_IP_HL_CLIENT }}" }
  notify:
    - cloud-init restart
  tags:
    - update_hosts
    - change_name_HOST_NAME_PG_CON_POOL_VIP

- name: firewalld disable
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: set the russian locale on database servers
  shell: |
    localedef -i ru_RU -f UTF-8 ru_RU.UTF-8
    localectl set-locale LANG=ru_RU.UTF-8
  notify:
    - system restart
#  when: "'hl-pg0' in ansible_hostname"
  when: ('hl-pg0' in ansible_hostname) or ('hl-zabbix0' in ansible_hostname)
